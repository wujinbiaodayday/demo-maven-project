<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ddc.common.demo.persistence.basic.dao.CityDao">

<resultMap id="cityDOResult" type="com.ddc.common.demo.domain.basic.CityDO">
    <result column="id" property="id" jdbcType="" javaType="" typeHandler=""/>
    <result column="province_id" property="provinceId"/>
    <result column="city_cname" property="cityCname"/>
    <result column="sort" property="sort"/>
    <result column="short_name" property="shortName"/>
    <result column="lng" property="lng"/>
    <result column="lat" property="lat"/>
    <result column="gmt_create" property="gmtCreate"/>
    <result column="gmt_modified" property="gmtModified"/>
</resultMap>

<sql id="cityDO_columns">
    id,
    province_id,
    city_cname,
    sort,
    short_name,
    lng,
    lat,
    gmt_create,
    gmt_modified
</sql>

<sql id="cityDO_sqlForInsert">
    province_id,
    city_cname,
    sort,
    short_name,
    lng,
    lat,
    gmt_create,
    gmt_modified
</sql>

<sql id="cityDO_columnsForInsert">
    #{provinceId},
    #{cityCname},
    #{sort},
    #{shortName},
    #{lng},
    #{lat},
    now(),
    now()
</sql>

<sql id="cityDO_setterForUpdate">
    <set>
        gmt_modified = now(),
        <if test="id != null">
            id = #{id},
        </if>
        <if test="provinceId != null">
            province_id = #{provinceId},
        </if>
        <if test="cityCname != null">
            city_cname = #{cityCname},
        </if>
        <if test="sort != null">
            sort = #{sort},
        </if>
        <if test="shortName != null">
            short_name = #{shortName},
        </if>
        <if test="lng != null">
            lng = #{lng},
        </if>
        <if test="lat != null">
            lat = #{lat},
        </if>
    </set>
</sql>

<sql id="cityDO_selector">
    select
    <include refid="cityDO_columns"/>
    from md_city
</sql>

<sql id="cityDO_query_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="data.id != null">
            AND id = #{data.id}
        </if>
        <if test="data.provinceId != null">
            AND province_id = #{data.provinceId}
        </if>
        <if test="data.cityCname != null">
            AND city_cname = #{data.cityCname}
        </if>
        <if test="data.sort != null">
            AND sort = #{data.sort}
        </if>
        <if test="data.shortName != null">
            AND short_name = #{data.shortName}
        </if>
        <if test="data.lng != null">
            AND lng = #{data.lng}
        </if>
        <if test="data.lat != null">
            AND lat = #{data.lat}
        </if>
        <if test="data.gmtCreate != null">
            AND gmt_create = #{data.gmtCreate}
        </if>
        <if test="data.gmtModified != null">
            AND gmt_modified = #{data.gmtModified}
        </if>
        <if test="ins != null ">
            AND
            <foreach collection="ins" item="item" open="(" separator="and" close=")">
                ${item.column} in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notIns != null">
            AND
            <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                ${item.column} not in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="equals != null">
            AND
            <foreach collection="equals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="notEquals != null">
            AND
            <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                ${item.column} != #{item.value}
            </foreach>
        </if>
        <if test="lts != null">
            AND
            <foreach collection="lts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ < ]]> #{item.value}
            </foreach>
        </if>
        <if test="gts != null">
            AND
            <foreach collection="gts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ > ]]> #{item.value}
            </foreach>
        </if>
        <if test="likes != null">
            AND
            <foreach collection="likes" item="item" open="(" separator="and" close=")">
                ${item.column} like concat('%', #{item.value}, '%')
            </foreach>
        </if>
        <if test="ltes != null">
            AND
            <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ <= ]]> #{item.value}
            </foreach>
        </if>
        <if test="gtes != null">
            AND
            <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.value}
            </foreach>
        </if>
        <if test="ranges != null">
            AND
            <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
            </foreach>
        </if>
        AND is_delete = 0
    </trim>
</sql>


<sql id="cityDO_entity_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
                    <if test="id != null">
                AND id = #{id}
            </if>
                    <if test="provinceId != null">
                AND province_id = #{provinceId}
            </if>
                    <if test="cityCname != null">
                AND city_cname = #{cityCname}
            </if>
                    <if test="sort != null">
                AND sort = #{sort}
            </if>
                    <if test="shortName != null">
                AND short_name = #{shortName}
            </if>
                    <if test="lng != null">
                AND lng = #{lng}
            </if>
                    <if test="lat != null">
                AND lat = #{lat}
            </if>
                    <if test="gmtCreate != null">
                AND gmt_create = #{gmtCreate}
            </if>
                    <if test="gmtModified != null">
                AND gmt_modified = #{gmtModified}
            </if>
                            AND is_delete = 0
            </trim>
</sql>


<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.ddc.common.demo.domain.basic.CityDO">
    insert into md_city
    (
        <include refid="cityDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="cityDO_columnsForInsert"/>
        ,0
    )
</insert>

<update id="update" parameterType="com.ddc.common.demo.domain.basic.CityDO">
    update md_city
    <include refid="cityDO_setterForUpdate" />
    where id = #{id}
    and is_delete = 0
</update>


<update id="updateByQuery" parameterType="com.ddc.common.demo.domain.basic.CityDO">
    update md_city
    <set>
        gmt_modified = now(),
        <if test="update.id != null">
            id = #{update.id},
        </if>
        <if test="update.provinceId != null">
            province_id = #{update.provinceId},
        </if>
        <if test="update.cityCname != null">
            city_cname = #{update.cityCname},
        </if>
        <if test="update.sort != null">
            sort = #{update.sort},
        </if>
        <if test="update.shortName != null">
            short_name = #{update.shortName},
        </if>
        <if test="update.lng != null">
            lng = #{update.lng},
        </if>
        <if test="update.lat != null">
            lat = #{update.lat},
        </if>
    </set>
    <include refid="cityDO_query_segment"/>
</update>


<insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.ddc.common.demo.domain.basic.CityDO">
    insert into md_city
    (
        <include refid="cityDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="cityDO_columnsForInsert"/>
        ,0
    )
    on duplicate key update
    gmt_modified = now()
    <if test="id != null">
        ,id = #{id}
    </if>
    <if test="provinceId != null">
        ,province_id = #{provinceId}
    </if>
    <if test="cityCname != null">
        ,city_cname = #{cityCname}
    </if>
    <if test="sort != null">
        ,sort = #{sort}
    </if>
    <if test="shortName != null">
        ,short_name = #{shortName}
    </if>
    <if test="lng != null">
        ,lng = #{lng}
    </if>
    <if test="lat != null">
        ,lat = #{lat}
    </if>
</insert>

<!-- Delete -->
<update id="delete">
    update md_city
    set is_delete = 1, gmt_modified = now()
    <include refid="cityDO_query_segment"/>
</update>
<update id="deleteById">
    update md_city
    set is_delete = 1, gmt_modified = now()
    where id = #{id}
</update>





<!-- query class -->
<sql id="cityDO_groupBy">
    <if test="groupBys != null">
        group by
        <foreach collection="groupBys" item="item" open="" separator="," close="">
            #{item}
        </foreach>
    </if>
</sql>

<sql id="cityDO_orderby">
    <if test="orderBys != null">
        order by
        <foreach collection="orderBys" item="item" open="" separator="," close="">
            ${item.column} ${item.direction}
        </foreach>
    </if>
</sql>


<select id="query" resultType="cityDOResult" resultMap="cityDOResult" parameterType="com.ddc.common.demo.domain.basic.CityDO">
    <include refid="cityDO_selector"/>
    <include refid="cityDO_query_segment"/>
    <include refid="cityDO_groupBy"/>
    <include refid="cityDO_orderby"/>
</select>

<select id="queryOne" resultMap="cityDOResult" parameterType="com.ddc.common.demo.domain.basic.CityDO">
    <include refid="cityDO_selector"/>
    <include refid="cityDO_query_segment"/>
    <include refid="cityDO_groupBy"/>
    <include refid="cityDO_orderby"/>
    limit 0,1
</select>

<select id="query4Page" resultMap="cityDOResult" parameterType="com.ddc.common.demo.domain.basic.CityDO">
    <include refid="cityDO_selector"/>
    <include refid="cityDO_query_segment"/>
    <include refid="cityDO_groupBy"/>
    <include refid="cityDO_orderby"/>
    limit ${startRowForMysql}, ${pageSize}
</select>


<select id="count" resultType="java.lang.Long">
    SELECT COUNT(1) FROM md_city
    <include refid="cityDO_query_segment"/>
</select>

<select id="countByDo" resultType="java.lang.Long">
    SELECT COUNT(1) FROM md_city
    <include refid="cityDO_entity_segment"/>
</select>

<select id="getById" resultMap="cityDOResult">
    <include refid="cityDO_selector"/>
    where id = #{id}
    and is_delete = 0
</select>

<select id="getList" resultMap="cityDOResult">
    <include refid="cityDO_selector"/>
    <include refid="cityDO_entity_segment"/>
</select>

<select id="getByIdForUpdate" resultMap="cityDOResult">
    <include refid="cityDO_selector"/>
    where id = #{id}
    and is_delete = 0
    for update
</select>

</mapper>
